- Nivel C:

- Query C/1: The average, the minimum, the maximum, and the standard deviation of the number of fix-up tasks per user.

select avg(c.fixUpTasks.size), min(c.fixUpTasks.size) , max(c.fixUpTasks.size), sqrt(sum(c.fixUpTasks.size*c.fixUpTasks.size)/count(c.fixUpTasks.size)-(avg(c.fixUpTasks.size)*avg(c.fixUpTasks.size))) from Customer c;

- Query C/2: The average, the minimum, the maximum, and the standard deviation of the number of applications per fix-up task.

select avg(f.applications.size), min(f.applications.size) , max(f.applications.size), sqrt(sum(f.applications.size*f.applications.size)/count(f.applications.size)-(avg(f.applications.size)*avg(f.applications.size))) from FixUpTask f;

- Query C/3: The average, the minimum, the maximum, and the standard deviation of the maximum price of the fix-up tasks.

select avg(f.maxPrice), min(f.maxPrice) , max(f.maxPrice), sqrt(sum(f.maxPrice*f.maxPrice)/count(f.maxPrice)-(avg(f.maxPrice)*avg(f.maxPrice))) from FixUpTask f;

- Query C/4: The average, the minimum, the maximum, and the standard deviation of the price offered in the applications.

select avg(a.offeredPrice), min(a.offeredPrice) , max(a.offeredPrice), sqrt(sum(a.offeredPrice*a.offeredPrice)/count(a.offeredPrice)-(avg(a.offeredPrice)*avg(a.offeredPrice))) from Application a;

- Query C/5: The ratio of pending applications.

select sum(case when a.status = 'PENDING' then 1.0 else 0.0 end)/count(a) from Application a;

- Query C/6: The ratio of accepted applications.

select sum(case when a.status='ACCEPTED' then 1.0 else 0.0 end)/count(a) from Application a;

- Query C/7: The ratio of rejected applications.

select sum(case when a.status='REJECTED' then 1.0 else 0.0 end)/count(a) from Application a;

- Query C/8: The ratio of pending applications that cannot change its status because their time periodâ€™s elapsed.

select a from Application a where a.status='PENDING' and a.registerMoment < CURRENT_DATE;

- Query C/9: The listing of customers who have published at least 10% more fix-up tasks than the average, ordered by number of applications.

select f.customer from FixUpTask f group by f.customer having count(f) >= 1.1*((select count(t) from FixUpTask t)/(select count(c) from Customer c)) order by f.applications.size;

- Query C/10: The listing of handy workers who have got accepted at least 10% more ap-plications than the average, ordered by number of applications.

select h1 from HandyWorker h1 where h1.applications.size/ (select avg(h2.applications.size) from HandyWorker h2)>=1.1 order by h1.applications.size;


- Nivel B:

- Query B/1: The minimum, the maximum, the average, and the standard deviation of the number of complaints per fix-up task.

select min(f.complaints.size), max(f.complaints.size), avg(f.complaints.size), sqrt(sum(f.complaints.size*f.complaints.size)/count(f.complaints.size)-(avg(f.complaints.size)*avg(f.complaints.size))) from FixUpTask f;

- - Description:
The minimum, the maximum, the average, and the standard deviation of the number of notes per referee report.

- Query B/2: The minimum, the maximum, the average, and the standard deviation of the number of notes per referee report.

select min(r.notes.size), max(r.notes.size), avg(r.notes.size), stddev(r.notes.size) from Report r;

- Query B/3: The ratio of fix-up tasks with a complaint.

select count(c)/(select count(f) from FixUpTask f)*1.0 from FixUpTask c where c.complaints.size = 1;

- Query B/4: The top-three customers in terms of complaints.

select f.customer from FixUpTask f group by f.customer order by sum(f.complaints.size);

- Query B/5: The top-three handy workers in terms of complaints.

select a.handyWorker from Application a group by a.handyWorker order by sum(a.fixUpTask.complaints.size);